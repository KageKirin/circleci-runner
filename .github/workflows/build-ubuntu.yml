name: Build ubuntu images

on:
  schedule:
    - cron: 0 12 */7 * *
  push:
    paths:
      - '.github/workflows/build-ubuntu.yml'
      - 'linux/ubuntu/**'
      - 'build.ps1'
    branches:
      - 'main'
  pull_request:
    paths:
      - '.github/workflows/build-ubuntu.yml'
      - 'linux/ubuntu/**'
      - 'build.ps1'
  workflow_dispatch:

env:
  IMAGE_LABEL_OWNER: ${{ github.repository_owner }}
  IMAGE_LABEL_REPO: ${{ github.repository }}
  SLUG: ${{ github.repository_owner }}/circleci-ubuntu
  DISTRO: ubuntu
  NODE: '16 18'
  BUILD_REF: ${{ github.sha }}
  SKIP_TEST: false
  PUSH_GHCR: ${{ github.repository == (github.event.pull_request.head.repo.full_name || github.repository) && '1' || '' }}
  LATEST_TAG: 22.04

defaults:
  run:
    shell: sh

jobs:
  build-custom:
    name: Build ${{ matrix.TYPE }}:${{ matrix.TAG }}
    if: (!cancelled() && !failure())
    runs-on: ubuntu-latest
    env:
      PLATFORMS: ${{ matrix.PLATFORMS }}
      BUILD_TAG: ${{ matrix.TYPE }}-${{ matrix.TAG }}
      TYPE: ${{ matrix.TYPE }}
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        TAG:
          - 22.04
        TYPE:
          - custom
        include:
          - PLATFORMS: linux/amd64,linux/arm64
            TYPE: custom
    steps:
      - name: Cleanup
        run: |
          docker rmi -f $(docker images -aq) || :
          rm -r "$RUNNER_TOOL_CACHE" || :
          rm -r "$RUNNER_TOOLSDIRECTORY" || :
          rm -r "$AGENT_TOOLSDIRECTORY" || :
        shell: bash
      - name: Force SLUG to lowercase
        uses: actions/github-script@v6
        with:
          github-token: n/a
          script: |
            core.exportVariable('SLUG', process.env.SLUG.toLowerCase());

      - name: Login to GitHub Container Registry
        if: env.PUSH_GHCR
        run: exec buildah login -u ${{ github.actor }} -p ${{ github.token }} ghcr.io

      - name: Print tag
        run: |
          if ${{ ( github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' ) }} ; then
            echo "PART_TAG=$(date +%Y%m%d)" | tee -a "$GITHUB_ENV"
          else
            echo "PART_TAG=dev" | tee -a "$GITHUB_ENV"
          fi

      - name: Set Ubuntu version to RELEASE
        run: |
          if [ "$LATEST_TAG" = "${{ matrix.TAG }}" ]; then
            echo "RELEASE_TAG=$(lsb_release -rs)" | tee -a "$GITHUB_ENV"
          else
            echo "RELEASE_TAG=${{ matrix.TAG }}" | tee -a "$GITHUB_ENV"
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - uses: actions/checkout@v3

      - name: Build and push ${{ env.DISTRO }}:${{ env.TAG }}
        shell: buildah unshare pwsh "{0}"
        env:
          TAG: ${{ matrix.TYPE }}-${{ matrix.TAG }}
          LATEST_TAG: ${{ matrix.TYPE }}-latest
          FROM_IMAGE: ghcr.io/catthehacker/ubuntu
          FROM_TAG: custom-latest
          BUILD_TAG_VERSION: ${{ env.PART_TAG }}
          PUSH_LATEST: ${{ env.LATEST_TAG == matrix.TAG && '1' || '' }}
          PUSH_DEFAULT: ${{ ( github.event_name != 'pull_request' && github.event_name != 'push' && !env.ACT ) && '1' || '' }}
        run: |
          $tags = @()
          $tagNames = @( "$env:TAG-$env:PART_TAG" )
          if($env:PUSH_LATEST) {
            $tagNames += "$env:LATEST_TAG-$env:PART_TAG"
          }
          if($env:PUSH_DEFAULT) {
            $tagNames += $env:TAG
            if($env:PUSH_LATEST) {
              $tagNames += $env:LATEST_TAG
            }
          }

          foreach($tagName in $tagNames) {
            if($env:PUSH_GHCR) {
              $tags += "ghcr.io/${env:SLUG}:$tagName"
            }
          }

          echo $tags

          ./build.ps1 `
              -push `
              -tags $tags
